version: '3'
services:

  datadog:
    image: "datadog/agent"
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS='env:quarkus-dev'
      - DD_APM_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro

  documents:
    build: ./apps/documents
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: p4ssw0rd
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/postgres"
      DD_SERVICE: documents-service
      DD_ENV: quarkus-dev
      DD_AGENT_HOST: datadog
      DD_TRACE_AGENT_URL: http://datadog:8126
      DD_LOGS_INJECTION: true
      DD_TRACE_SAMPLE_RATE: 1
      DD_PROFILING_ENABLED: true
    ports:
      - "8080:8080"
    depends_on:
      - datadog
      - postgres
    labels:
      com.datadoghq.tags.env: 'quarkus-dev'
      com.datadoghq.tags.service: 'documents-service'
      com.datadoghq.tags.version: '1.0'
      com.datadoghq.ad.logs: '[{"source": "java", "service": "documents-service"}]'

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p4ssw0rd
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - /root/postgres:/var/lib/postgresql/data
      - /root/dd_agent.sql:/docker-entrypoint-initdb.d/dd_agent.sql
    ports:
      - "5432:5432"
    labels:
      com.datadoghq.tags.env: 'quarkus-dev'
      com.datadoghq.tags.service: 'postgres-database'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgres-database"}]'
    depends_on:
      - datadog
  
volumes:
  postgres:
